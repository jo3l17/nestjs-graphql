# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Action succesfull"""
type MessageResponseDto {
  message: String!
}

"""Message"""
type MessageResponseModel {
  message: String!
}

"""Token model"""
type TokenModel {
  """Token"""
  token: String!

  """Expiration date"""
  expiration: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Attachment {
  id: Float!
  key: String!
  ext: String!
  contentType: String!
  signedUrl: String
  createdAt: DateTime!
  productId: Float!
}

"""Category model"""
type Category {
  id: ID
  uuid: String
  name: String
  products: [Product!]!
}

"""Product model"""
type Product {
  id: ID
  uuid: String
  name: String
  stock: Float
  price: Float
  likes: Float
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  category: [Category!]!
}

"""Product with Images model"""
type ProductImage {
  id: ID
  uuid: String
  name: String
  stock: Float
  price: Float
  likes: Float
  active: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  imagesUrl: [Attachment!]!
  category: [Category!]!
}

type ResponseCategory {
  """Category name"""
  name: String!
}

type ProductResponse {
  """Product ID"""
  id: Float!

  """Product UUID"""
  uuid: String!

  """Product likes"""
  likes: Float!

  """Product categories"""
  category: ResponseCategory!
}

type CartProductResponse {
  """quantity"""
  quantity: Float!

  """product"""
  product: ProductResponse!
}

type CartResponse {
  id: Float!
  uuid: String!
  total: Float!
  products: [CartProductResponse!]!
}

type Query {
  product(uuid: String!): ProductImage!
  products(pagination: PaginationQueryDto!): [Product!]!
  productsByCategory(uuid: String!): [Product!]!
  categories: [Category!]!
  getCart: CartResponse!
}

input PaginationQueryDto {
  limit: Float
  offset: Float
}

type Mutation {
  signup(input: CreateUserInput!): TokenModel!
  signin(input: LoginUserInput!): TokenModel!
  verifyToken(token: String!): MessageResponseModel!
  refreshToken(token: String!): TokenModel!
  logout(token: String!): MessageResponseModel!
  createProduct(input: CreateProductInput!): Product!
  updateProduct(input: UpdateProductInput!): Product!
  deleteProduct(uuid: String!): MessageResponseDto!
  getSignedUrl(input: ContentTypeInput!): Attachment!
  setLike(uuid: String!): MessageResponseDto!
  deleteLike(uuid: String!): MessageResponseDto!
  createCategory(input: CreateCategoryInput!): Category!
  updateCategory(input: UpdateCategoryInput!): Category!
  deleteCategory(uuid: String!): MessageResponseDto!
  addToCart(quantity: Float!, productUUid: String!): CartResponse!
  removeFromCart(productUUid: String!): CartResponse!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
  role: String = "user"
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateProductInput {
  """Product name"""
  name: String!

  """Product stock"""
  stock: Float!

  """Product price"""
  price: Float!

  """Product status"""
  active: Boolean!

  """Peoduct categories"""
  categoryName: [String!]
}

input UpdateProductInput {
  """Product name"""
  name: String

  """Product stock"""
  stock: Float

  """Product price"""
  price: Float

  """Product status"""
  active: Boolean

  """Peoduct categories"""
  categoryName: [String!]

  """Product UUID"""
  uuid: String
}

input ContentTypeInput {
  """Product uuid"""
  productUuid: String!

  """Image format"""
  contentType: String!
}

input CreateCategoryInput {
  """Category name"""
  name: String
}

input UpdateCategoryInput {
  """Category name"""
  name: String

  """Category uuid"""
  uuid: String!
}
